const express = require('express');
const http = require('http');
const WebSocket = require('ws');

const app = express();
const server = http.createServer(app);
const wss = new WebSocket.Server({ server });

let tasks = []; // shared task list

app.get('/', (req, res) => {
  res.send(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8" />
      <title>Collaborative To-Do List</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          padding: 20px;
        }
        input[type="text"] {
          width: 300px;
          padding: 8px;
        }
        button {
          padding: 8px 12px;
          margin-left: 5px;
        }
        ul {
          list-style-type: none;
          padding: 0;
        }
        li {
          margin-top: 10px;
        }
      </style>
    </head>
    <body>
      <h1>Collaborative To-Do List</h1>
      <input type="text" id="taskInput" placeholder="Enter your task..." />
      <button id="addBtn">Add Task</button>
      <ul id="taskList"></ul>

      <script>
        const socket = new WebSocket('ws://' + location.host);
        const taskInput = document.getElementById('taskInput');
        const taskList = document.getElementById('taskList');
        const addBtn = document.getElementById('addBtn');

        // Render tasks
        const renderTasks = (tasks) => {
          taskList.innerHTML = '';
          tasks.forEach((task, index) => {
            const li = document.createElement('li');
            li.innerHTML = \`\${task} <button data-index="\${index}" class="remove-btn">Remove</button>\`;
            taskList.appendChild(li);
          });
        };

        // Add new task
        const addTask = () => {
          const task = taskInput.value.trim();
          if (task) {
            socket.send(JSON.stringify({ type: 'add', task }));
            taskInput.value = '';
            taskInput.focus();
          }
        };

        // Remove task
        taskList.addEventListener('click', (e) => {
          if (e.target.classList.contains('remove-btn')) {
            const index = e.target.dataset.index;
            socket.send(JSON.stringify({ type: 'remove', index: parseInt(index) }));
          }
        });

        // WebSocket events
        socket.onmessage = (event) => {
          const data = JSON.parse(event.data);
          if (data.type === 'init' || data.type === 'update') {
            renderTasks(data.tasks);
          }
        };

        addBtn.addEventListener('click', addTask);
        taskInput.addEventListener('keypress', (e) => {
          if (e.key === 'Enter') addTask();
        });
      </script>
    </body>
    </html>
  `);
});

// WebSocket server logic
wss.on('connection', (ws) => {
  // Send current task list to new client
  ws.send(JSON.stringify({ type: 'init', tasks }));

  // Listen for actions from client
  ws.on('message', (message) => {
    const data = JSON.parse(message);

    if (data.type === 'add') {
      tasks.push(data.task);
    } else if (data.type === 'remove') {
      tasks.splice(data.index, 1);
    }

    // Broadcast updated task list to all clients
    const response = JSON.stringify({ type: 'update', tasks });
    wss.clients.forEach((client) => {
      if (client.readyState === WebSocket.OPEN) {
        client.send(response);
      }
    });
  });
});

// Start server
const PORT = 3000;
server.listen(PORT, () => {
  console.log(\`âœ… Server running at http://localhost:\${PORT}\`);
});
